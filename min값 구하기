min값구하기

# -*- coding: utf-8 -*-

import datetime
import urllib2
import json
import time

json_tmp = {}
rest_result = []

param_id = request.vars['id']

#url = "http://127.0.0.1:4242/api/query?start=1m-ago&m=sum:temperature%7Bid=" + param_id + "%7D&o=&yrange=%5B0:%5D&key=out%20bottom%20center%20box&wxh=740x345&autoreload=15"
url = "http://125.7.128.52:4242/api/query?start=6h-ago&m=sum:gyu_RC1_thl.temperature{nodeid=" + param_id + "}&o=&yrange=[0:]&wxh=940x431&autoreload=15"
def make_json(min_val):
        json = {"min":{"id":param_id, "value":min_val}}
        return json

def make_data(raw_data):
        max_val = 0
        tmp_data = raw_data.replace('u' , '')
        tmp_data = raw_data.replace('{' , '')
        tmp_data = raw_data.replace("'" , '')
        tmp_data = raw_data.replace('}' , '')
        tmp_data = raw_data.split(',')

        arr_data = tmp_data[0].split(':')
        min_val = arr_data[1].strip()

        for i in range(0, len(tmp_data)-1) :
                arr_data = tmp_data[i].split(':')
                arr_Time = arr_data[0].strip()
                arr_Value = arr_data[1].strip()

                if float(arr_Value) < float(min_val):
                        min_val = arr_Value
        return min_val

def test():
        param = request.vars['id']

        url_lib=urllib2.urlopen(url)
        url_data=url_lib.read()

        Data=json.loads(url_data)
        raw_data=str(Data[0]["dps"])

        # get max data using make_data function
        result_max_val = make_data(raw_data)

        json_tmp['1'] = make_json(result_max_val)

        rest_result.append(json_tmp['1'])
        ret = response.json(rest_result)
        return ret
